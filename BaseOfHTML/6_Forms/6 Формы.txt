				Формы <form>
Формы создаются при помощи парного тега <form></form>.
У тега <form> есть два важных атрибута:
- action задаёт адрес, URL, отправки формы;
- method задаёт метод отправки формы.
Пример:
<form action="https://echo.htmlacademy.ru" method="get">
  поля формы
</form>
Для отправки формы обычно используют методы get или post. Если не указать атрибут method, то будет использован get.
-Метод get посылает данные формы в строке запроса, то есть они видны в адресной строке браузера и следуют после знака вопроса. Используется в поисковых формах.
-Метод post посылает данные в теле HTTP-запроса и используется, когда нужно отправить много данных и ссылка на результат обработки этих данных не нужна. Например, при редактировании личного профиля.

				Текстовое поле ввода <input>
Большинство полей форм создаётся с помощью одиночного тега <input>. У этого тега два обязательных атрибута:
-type задаёт тип поля;
-name задаёт имя поля. Имя поля отправляется на сервер и нужно, чтобы правильно обработать данные на сервере. 
Тип поля влияет на то, как оно будет отображаться и вести себя. Самый распространённый тип — это text, который обозначает текстовое поле. Он же используется по умолчанию. Пример:
<form action="https://echo.htmlacademy.ru" method="get">
  <input type="text" name="search">
</form>
class="date" позволяет задать дату

				Идентификатор и значение по умолчанию
Атрибут id поля ввода обозначает идентификатор. 
Обычно идентификаторы используют для повышения удобства работы с формой, например, создают подписи, связанные с мелкими полями. При нажатии на такие подписи активируется связанное поле. 
Идентификатор в отличие от имени поля не передаётся на сервер. 
Атрибут value задаёт значение поля ввода по умолчанию. 

				Подпись для поля ввода
Тег <label> устанавливает связь между определенной меткой, в качестве которой обычно выступает текст, и элементом формы (<input>, <select>, <textarea>). Другими словами, парный тег <label> логически связывает подпись и поле для ввода. 
А ещё если нажать на текст в такой подписи, то курсор переместится в соответствующее поле.
- Первый способ создать подпись — просто обернуть текст подписи и тег поля в тег <label>, вот так:
<label>
  Подпись <input type="text" name="username">
</label>
Надо отметить, что при оборачивании текста в тег <label> он визуально никак не меняется.
- Второй способ - это связать подпись и поле для ввода по id.
Это делается, когда обернуть поле и текст подписи в тег <label> нельзя. Например, когда они размещены в разных ячейках таблицы.
Добавляем к полю ввода идентификатор с помощью атрибута id.
Оборачиваем текст подписи в тег <label>.
Добавляем тегу <label> атрибут for.
В атрибут for записываем такое же значение, что и в атрибуте id у поля.
<label for="user-field-id">Имя пользователя</label>
...
много-много других тегов
...
<input id="user-field-id" type="text" name="username">

				Поле для ввода пароля
Чтобы сделать <input> полем для ввода пароля, в котором текст будет отображаться «звёздочками», нужно просто изменить значение атрибута type тега <input> на password.

				Кнопка отправки формы
Такая кнопка создаётся с помощью тега <input> c type="submit".
Надпись на кнопке можно задать с помощью атрибута value. Для кнопки отправки формы задавать имя необязательно. Но если имя задано, то на сервер будут отправляться имя и значение кнопки.

				Многострочное поле ввода <textarea>
Многострочное текстовое поле создаётся с помощью парного тега <textarea></textarea>. У него есть атрибуты name и id, которые аналогичны атрибутам текстового поля.
- Атрибут rows принимает целочисленное значение и задаёт высоту многострочного поля в строках. 
- Атрибут cols задаёт ширину поля в символах. В качестве ширины символа берётся некоторая «усреднённая ширина».
- Атрибут value у многострочного поля отсутствует, а значение по умолчанию задаётся по-другому. Текст, расположенный между открывающим и закрывающим тегом <textarea> и является значением по умолчанию. Вот так:
<textarea>Значение по умолчанию</textarea>
				
				Чекбокс или «галочка»
Поле-галочка — это тег <input> с типом checkbox.
Галочка работает по принципу «либо да, либо нет». Если галочка стоит, то браузер посылает переменную с именем поля на сервер, если галочки нет, то не посылается ничего. Таким образом, атрибут value не является обязательным.
Чтобы галочка стояла по умолчанию, нужно добавить к тегу атрибут checked. Вот так:
<input type="checkbox" checked>
Чекбокс не подразумевает выбор одного элемента из нескольких. Поэтому если в одной форме есть несколько чекбоксов, то имена у них должны быть разными.	

				Переключатель или «радиобаттон»
Поле-переключатель — это тег <input> с типом radio.
Обычно переключатели размещают группами по несколько штук. Причём у переключателей из одной группы должно быть одинаковое имя и разные значения, которые задаются c помощью value.
Таким образом, атрибут value является для переключателей обязательным. Браузер отправляет на сервер значение value выбранного переключателя.
Группу переключателей можно создать при помощи ещё одного <input> с таким же именем, но другим значением value.
Подобным образом можно создавать группы переключателей с любым количеством вариантов.
Чтобы сделать какой-либо вариант в переключателе выбранным по умолчанию, нужно добавить к соответствующему тегу <input> атрибут checked, как у поля-галочки.

				Раскрыващийся список
Раскрывающийся список создается при помощи парного тега <select></select>
Внутри него добавляются варианты ответа при помощи парных тегов <option></option>, внутри которых прописывается атрибуты value с нужными значениями, которые будут передаваться на сервер. Видимые варианты ответа прописываются в самом теге. 
Если при отправке формы у выбранного варианта задан value, то на сервер отправится значение этого атрибута. В противном случае будет отправлен текст подписи.

<select name="theme">
  <option value="light">Светлая тема</option>
  <option value="dark">Тёмная тема</option>
  ...
</select>

				Мультиселект
Атрибут multiple к тегу <select> позволяет выбрать несколько значений. 
Высота мультиселекта задается при помощи атрибута size к тегу <select>. 
Выставить некоторые пукты выбранными по умолчанию можно при помощи атрибута selected к нужными тегам <option>
При отправке данных мультиселекта на сервер с PHP после имени в значении атрибута name ставятся символы квадратных скобок []. Например, <select name="days[]">. Это необязательное требование для имени мультиселекта, а нужно только для корректной обработки данных в PHP.

				Поле для загрузки файлов
Поле для загрузки файлов создается при помощи type="file" для тега <input>. Для этого поля обязательный атрибут name.
Чтобы поле заработало и браузер смог передать выбранный файл на сервер, необходимо добавить форме атрибут enctype со значением multipart/form-data. Не полю, а форме.
    <form action="https://echo.htmlacademy.ru" method="post" enctype="multipart/form-data">
      <p>Выберите изображение для своего аватара:</p>
      <input type="file" name="avatar">
      <input type="submit" value="Загрузить">

				Скрытое поле
Это дополнительные данные, которые передаются на сервер, но которые скрыты от пользователя. Например, информация о пользователе. 
Скрытое поле задается при помощи type="hidden" тега <input>